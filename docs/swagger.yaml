definitions:
  model.ChatRequest:
    properties:
      content:
        description: Content is the user's input to the chat
        type: string
    required:
    - content
    type: object
  model.Conversation:
    properties:
      chat_history: {}
      conversation_id:
        type: string
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  model.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: Process chat requests and generate responses using the Groq API.
        Optionally, provide a `user_id` query parameter to associate the chat with
        a specific user.
      parameters:
      - description: Optional User ID to associate the chat with a user
        in: query
        name: user_id
        type: string
      - description: Chat request body containing the user's input
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/model.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Assistant's response, with locations and messages
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - missing or invalid input
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Server error - issue with Groq API or database operations
          schema:
            additionalProperties: true
            type: object
      summary: Handle chat requests
      tags:
      - chat
  /conversations:
    get:
      description: Fetch a list of conversations for a specific user by their user
        ID
      parameters:
      - description: User ID to fetch conversations
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response with conversations data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - user_id query parameter is required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: No conversations found for the given user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch conversations due to an internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get conversations by user ID
      tags:
      - conversations
    post:
      consumes:
      - application/json
      description: Add a new conversation to the database
      parameters:
      - description: New conversation data
        in: body
        name: conversation
        required: true
        schema:
          $ref: '#/definitions/model.Conversation'
      produces:
      - application/json
      responses:
        "201":
          description: Conversation successfully created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create conversation due to an internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new conversation
      tags:
      - conversations
  /users:
    get:
      description: Retrieve all users or a specific user by ID
      parameters:
      - description: User ID to fetch a specific user
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response with users data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch users
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new user to the database
      parameters:
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create user
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
swagger: "2.0"

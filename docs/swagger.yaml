basePath: /
definitions:
  model.ChatRequest:
    properties:
      content:
        description: Content is the user's input to the chat
        type: string
    required:
    - content
    type: object
  model.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: teysuizer1998@gmail.com
    name: GeoAssistant Team
  description: This is the API documentation for GeoAI App.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GeoAI App API
  version: "1.0"
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: Start a new conversation or continue an existing one
      parameters:
      - description: User ID to associate the chat
        in: query
        name: user_id
        required: true
        type: string
      - description: UUID of the existing conversation
        in: query
        name: uuid
        type: string
      - description: Chat request body
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/model.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Chat response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Conversation not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Handle chat requests
      tags:
      - chat
  /conversations:
    get:
      description: List all conversations for a user
      parameters:
      - description: User ID to fetch conversations
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of conversations
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: No conversations found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: List conversations
      tags:
      - conversations
  /users:
    get:
      description: Retrieve all users or a specific user by ID
      parameters:
      - description: User ID to fetch a specific user
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response with users data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to fetch users
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new user to the database
      parameters:
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to create user
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
swagger: "2.0"
